// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleEmployeeSystem.Data;

#nullable disable

namespace SimpleEmployeeSystem.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240129195947_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SimpleEmployeeSystem.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmployeeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JobPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeStatus = "Hired",
                            HireDate = new DateTime(2024, 1, 29, 20, 59, 46, 788, DateTimeKind.Local).AddTicks(8494),
                            JobPosition = "Tester",
                            Name = "Kacper Nowak"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeStatus = "Hired",
                            HireDate = new DateTime(2024, 1, 29, 20, 59, 46, 788, DateTimeKind.Local).AddTicks(8541),
                            JobPosition = "Developer",
                            Name = "Jan Kowalski"
                        },
                        new
                        {
                            Id = 3,
                            EmployeeStatus = "Hired",
                            HireDate = new DateTime(2024, 1, 29, 20, 59, 46, 788, DateTimeKind.Local).AddTicks(8543),
                            JobPosition = "Tester",
                            Name = "Anna Wesołowska"
                        });
                });

            modelBuilder.Entity("SimpleEmployeeSystem.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("JobStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Praca nad projektem A",
                            EmployeeId = 1,
                            JobStatus = "Aktywny",
                            Name = "Projekt A"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Praca nad projektem B",
                            EmployeeId = 2,
                            JobStatus = "Aktywny",
                            Name = "Projekt B"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Praca nad projektem C",
                            EmployeeId = 1,
                            JobStatus = "Aktywny",
                            Name = "Projekt C"
                        });
                });

            modelBuilder.Entity("SimpleEmployeeSystem.Models.Job", b =>
                {
                    b.HasOne("SimpleEmployeeSystem.Models.Employee", "Employee")
                        .WithMany("Jobs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SimpleEmployeeSystem.Models.Employee", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
